import { MaximumIdValue } from "../constants.js";

export class WordsService {
  baseUrl;
  apiObjects;

  constructor() {
    this.baseUrl = "https://swapi.dev/api/";
    this.apiObjects = [
      "people",
      "films",
      "planets",
      "species",
      "starships",
      "vehicles",
    ];
  }

  /**
   * Return a random resource as Promise
   * @returns {Promise} - a promise generated by fetch call
   */
  async getRandomResource() {
    let objectPath = this.getSpecificResourcePath();
    const response = await fetch(this.baseUrl + objectPath);
    const data = await response.json();
    return data;
  }

  /**
   * Returns a resource path "/resource-type/resource-id"
   * @returns {string} - the resource path
   */
  getSpecificResourcePath() {
    let resourceType = this.getResourceTypePath();
    let number = Math.floor(Math.random() * MaximumIdValue[resourceType]) + 1;
    let resourcePath = resourceType + "/" + number;
    return resourcePath;
  }

  /**
   * Returns a random type from apiObjects array
   * @returns {string} - a specific resource type
   */
  getResourceTypePath() {
    let selectedType = Math.floor(Math.random() * this.apiObjects.length);
    return this.apiObjects[selectedType];
  }

  /**
   * Return the resource type from url
   * (e.g. from https://swapi.dev/api/people/1 return people)
   * @param {string} url
   */
  getResourceTypeFromUrl(url) {
    return url
      .toString()
      .slice(this.baseUrl.length, url.indexOf("/", this.baseUrl.length));
  }
}
